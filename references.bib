
@online{pike_less_2012,
	title = {Less is exponentially more},
	url = {https://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html},
	author = {Pike, Rob},
	date = {2012},
}

@article{meyerson_go_2014,
	title = {The Go Programming Language},
	volume = {31},
	rights = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
	issn = {0740-7459, 1937-4194},
	url = {https://ieeexplore.ieee.org/document/6898707/},
	doi = {10.1109/MS.2014.127},
	pages = {104--104},
	number = {5},
	journaltitle = {{IEEE} Software},
	shortjournal = {{IEEE} Softw.},
	author = {Meyerson, Jeff},
	urldate = {2025-02-12},
	date = {2014-09},
	langid = {english},
}

@book{holmes_shipping_2023,
	location = {Shelter Island, {NY}},
	title = {Shipping Go: develop, deliver, discuss, design, and go again},
	abstract = {An effective software delivery pipeline automates all stages, from initial design, through development, deployment, and ultimately the usage experience that feeds back into new features and releases. Go embraces the best practices of Continuous Delivery, and adds a few language-specific tools and twists of its own. "Shipping Go" shows you how to build Go-specific software development pipelines. You'll have a basic {CI}/{CD} process up and running by the time you finish Chapter 3, along with an iterative process for designing, releasing, and revising your applications. Then, you'll systematically upgrade your pipe-line to support containerization, integration testing, semantic versioning, and automated deployment. A set of handy appendices help you translate these valuable practices to Kotlin, Python, and {JavaScript} applications},
	publisher = {Manning Publications},
	author = {Holmes, Joel},
	date = {2023},
	keywords = {Computer software, Development, Go (Computer program language), Go (Langage de programmation), Génie logiciel, Software engineering},
}

@book{donovan_go_2016,
	location = {New York},
	title = {The Go programming language},
	series = {Addison-Wesley professional computing series},
	abstract = {Go may be our generation's most important new programming language. It is exceptionally expressive, highly efficient in both compilation and execution, and enables the development of extremely reliable and robust programs. It shares the same spirit programmers once found in C: it helps serious professional programmers achieve maximum effect with minimum means. Now, Go shares something else with C, too. Brian Kernighan, who wrote the world's most respected and useful C primer for working programmers, has just done the same for Go. Together with Google Go insider Alan Donovan, Kernighan explains what Go does and doesn't borrow from C ... the great ideas it borrows from other modern languages ... and how it avoids features that lead to unnecessary complexity and unreliable code. Throughout, their short, carefully-crafted code examples demonstrate today's most effective Go idioms, so you can start using Go effectively right from the beginning, and quickly take advantage of its full power. All code has been extensively reviewed by Go's creators at Google for both completeness and accuracy},
	publisher = {Addison-Wesley},
	author = {Donovan, Alan A. A. and Kernighan, Brian W.},
	date = {2016},
	keywords = {G (Lenguaje de programación para computadora), Go (Computer program language), Open source software, Programación de computadoras, Programming},
}

@article{cox_go_2022,
	title = {The Go programming language and environment},
	volume = {65},
	abstract = {Released as open source in November 2009, Go has become the foundation for critical infrastructure at every major cloud provider. Its creators look back on how Go got here and why it has stuck around.},
	pages = {70--78},
	number = {5},
	journaltitle = {Communications of the {ACM}},
	author = {Cox, Russ and Griesemer, Robert and Pike, Rob and Taylor, Ian Lance and Thompson, Ken},
	date = {2022-04},
}

@book{harsanyi_100_2022,
	location = {Shelter Island, {NY}},
	title = {100 Go mistakes: and how to avoid them},
	publisher = {Manning Publications Co},
	author = {Harsanyi, Teiva},
	date = {2022},
	keywords = {Computer programming, Go (Computer program language)},
}

@book{bates_go_2022,
	location = {Boston},
	title = {Go fundamentals},
	abstract = {"Thousands of developers and teams want to start taking advantage of Go, the powerful language used in projects ranging from Kubernetes to Docker and Vault. Go Fundamentals is specifically designed to get you up-to-speed fast, leverage your existing knowledge, and help you avoid common mistakes made by Go newcomers. Based on the authors' pioneering Gopher Guides training curricula, it will help you: quickly understand, read, and use Go syntax; work effectively with collection types, iteration, functions, structs, and pointers; understand the internals of Go Slices and learn how to use them properly; write idiomatic Go using core principles such as embedding and interfaces; gain a deep understanding of Go concurrency, to write more robust, well-performing code; create proper tests, including table tests, to quickly identify and fix problems; take advantage of channels, context, generics, templating and other sophisticated features; build web apps with {HTTP} and {HTML}, and more; covers Go 1.18 and Generics"--},
	publisher = {Addison-Wesley},
	author = {Bates, Mark and {LaNou}, Cory},
	date = {2022},
}

@book{kennedy_go_2016,
	location = {Shelter Island, {NY}},
	title = {Go in action},
	abstract = {Go in Action introduces the Go language, guiding you from inquisitive developer to Go guru. The book begins by introducing the unique features and concepts of Go. Then, you'll get hands-on experience writing real-world applications including websites and network servers, as well as techniques to manipulate and convert data at speeds that will make your friends jealous. -- Provided by publisher},
	publisher = {Manning Publications},
	author = {Kennedy, William and Ketelsen, Brian and Saint Martin, Erik},
	date = {2016},
	keywords = {Go (Computer program language), Open source software},
}

@book{chang_go_2016,
	location = {Shelter Island, New York},
	title = {Go web programming},
	publisher = {Manning Publcations Co},
	author = {Chang, Sau Sheong},
	date = {2016},
	keywords = {Development, Go (Computer program language), Programming, Web applications},
}

@book{babal_grpc_2024,
	location = {Shelter Island},
	title = {{gRPC} microservices in Go},
	abstract = {Go is perfect for writing fast, reliable microservices code, but that's only half the story. You also need a communications framework like {gRPC} to connect your services and handle load balancing, tracing, health checking, and authentication. Together, Go and {gRPC} accelerate the development process and eliminate many of the challenges you face when building and deploying microservices. {gRPC} microservices in Go teaches you how to build production-ready microservices using Go and {gRPC}. In it, you'll learn to create efficient {APIs} in Go, use {gRPC} for network communication, and deploy on cloud and Kubernetes. Helpful examples, including a complete {eCommerce} web app, make it easy to grasp each concept. You'll also get an inside look at testing, deployment, and efficient {DevOps} practices for microservices},
	publisher = {Manning Publications},
	author = {Babal, Hüseyin},
	date = {2024},
	keywords = {Go (Computer program language), Go (Langage de programmation), Logiciels libres, Open source software, Programmation, Programming, Remote procedure calls},
}

@book{cutajar_learn_2024,
	location = {Shelter Island, {NY}},
	title = {Learn concurrent programming with Go},
	abstract = {Learn Concurrent Programming with Go teaches readers how to boost the performance of their systems through the power of concurrent programming. It demystifies concurrency, explaining complex topics using simple language, easy-to-follow visuals, and relevant examples readers will face every day as a developer. Suitable for programmers who already know the basics of Go or another C-style language},
	publisher = {Manning Publications Co},
	author = {Cutajar, James},
	date = {2024},
	keywords = {Computer multitasking, Computer programming, Fonctionnement multitâche, Go (Computer program language), Go (Langage de programmation), Programmation (Informatique), computer programming},
}

@book{bodner_learning_2021,
	location = {Beijing [China] ; Boston [{MA}]},
	title = {Learning Go: an idiomatic approach to real-world Go programming},
	publisher = {O'Reily},
	author = {Bodner, Jon},
	date = {2021},
	keywords = {Computer programming, Go (Computer program language), Open source software, Programming, Web applications},
}
